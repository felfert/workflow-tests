name: UT for check-versions workflow

# See https://docs.github.com/en/actions/using-workflows/reusing-workflows#using-a-matrix-strategy-with-a-reusable-workflow

on:
  workflow_dispatch:

jobs:

#  test:
#    name: ${{ matrix.job.name }}
#    uses: ./.github/workflows/check-versions.yml 
#    with:
#      refname: ${{ matrix.job.refname }}
#      reftype: ${{ matrix.job.reftype }}
#      tomls: ${{ matrix.job.tomls }}
#      testattr: '{"name":"${{ matrix.job.name }}","expectsuccess":"${{ matrix.job.expectsuccess }}"}'
#    strategy:
#      fail-fast: false
#      matrix:
#        job:
#          - name: Empty tomls
#            refname: '0.2.4'
#            reftype: 'tag'
#            tomls: '[]'
#            expectsuccess: true

  test1:
    name: Normal tag
    uses: ./.github/workflows/check-versions.yml 
    with:
      refname: '0.2.4'
      reftype: 'tag'
      tomls: '["Cargo.toml", "cherryrgb/Cargo.toml"]'
      testattr: '{"name":"Normal tag","expectsuccess":true}'

  test2:
    name: Wrong version in toml
    uses: ./.github/workflows/check-versions.yml 
    with:
      refname: '0.2.4'
      reftype: 'tag'
      tomls: '["Cargo-wrongversion.toml", "cherryrgb/Cargo.toml"]'
      testattr: '{"name":"Wrong version in toml","expectsuccess":false}'

  test3:
    name: Nonexistant toml
    uses: ./.github/workflows/check-versions.yml 
    with:
      refname: '0.2.4'
      reftype: 'tag'
      tomls: '["nonexistent.toml", "cherryrgb/Cargo.toml"]'
      testattr: '{"name":"Nonexistent toml","expectsuccess":false}'

  test4:
    name: Invalid JSON
    uses: ./.github/workflows/check-versions.yml 
    with:
      refname: '0.2.4'
      reftype: 'tag'
      tomls: 'invalidJSON'
      testattr: '{"name":"Invalid JSON","expectsuccess":false}'

  test5:
    name: Empty tomls
    uses: ./.github/workflows/check-versions.yml 
    with:
      refname: '0.2.4'
      reftype: 'tag'
      tomls: '[]'
      testattr: '{"name":"Empty tomls","expectsuccess":true}'

  main:
    needs: [test1, test2, test3, test4, test4, test5]
    if: always() && !cancelled()
    runs-on: ubuntu-latest
    steps:
      - run: echo "${{ toJSON(needs.*) }}"
